{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\src\\\\components\\\\Questionaries.js\";\nimport React, { Component, useState, useRef } from 'react';\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Questionaries() {\n  var _useState = useState({\n    Q1: \"\",\n    Q2: \"\",\n    Q3: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      Questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var handleAnswers = function handleAnswers(event) {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    setQuestions(_objectSpread(_objectSpread({}, Questions), {}, _defineProperty({}, name, value)));\n  };\n\n  function formHandle(e) {\n    e.preventDefault();\n\n    for (var _i = 0, _Object$entries = Object.entries(Questions); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      while (value == null || value == \"\") {\n        var buttons = document.querySelectorAll(\"input[type='radio']\");\n        buttons.forEach(function (button) {\n          if (!button.checked) {\n            button.setAttribute(\"required\", \"\");\n          }\n        });\n        return;\n      }\n    }\n\n    console.log(Questions);\n  }\n\n  var taskPage = useNavigate();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex align-items-center justify-content-center \",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, \"Please fill out this Questionaries?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"engLevel\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"What is your English language level of understanding?\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select\",\n    value: Questions.Quest1,\n    name: \"Q1\",\n    id: \"Q1\",\n    onChange: function onChange(e) {\n      return setQuestions(_objectSpread(_objectSpread({}, Questions), {}, {\n        Q1: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Select any Options\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Satisfactory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Satisfactory\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Excellent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Excellent\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"engLevel\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"What is your German language level of understanding?\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select\",\n    value: Questions.Q2,\n    name: \"Quest2\",\n    id: \"Q2\",\n    onChange: function onChange(e) {\n      return setQuestions(_objectSpread(_objectSpread({}, Questions), {}, {\n        Q2: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Select any Options\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Satisfactory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Satisfactory\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Excellent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Excellent\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"engLevel\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Do you like soft drinks or hard drinks?\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select\",\n    value: Questions.Q3,\n    name: \"Quest3\",\n    id: \"Q3\",\n    onChange: function onChange(e) {\n      return setQuestions(_objectSpread(_objectSpread({}, Questions), {}, {\n        Q3: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Select any Options\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Satisfactory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Satisfactory\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Excellent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Excellent\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"engLevel\",\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"What is your favourite sports?\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select\",\n    value: Questions.Q4,\n    name: \"Quest4\",\n    id: \"Q4\",\n    onChange: function onChange(e) {\n      return setQuestions(_objectSpread(_objectSpread({}, Questions), {}, {\n        Q4: e.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Select any Options\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Bad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Satisfactory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Satisfactory\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Good\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Excellent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Excellent\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"mt-4 ms-4\",\n    onClick: function onClick() {\n      taskPage(\"/Description\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Next\")))));\n}\n\nexport default Questionaries;","map":{"version":3,"sources":["C:/Users/Addy/OneDrive/Documents/React/Client/src/components/Questionaries.js"],"names":["React","Component","useState","useRef","Form","Button","Container","useNavigate","Link","Questionaries","Q1","Q2","Q3","Questions","setQuestions","handleAnswers","event","target","name","value","formHandle","e","preventDefault","Object","entries","key","buttons","document","querySelectorAll","forEach","button","checked","setAttribute","console","log","taskPage","minHeight","maxWidth","submitData","Quest1","Q4"],"mappings":"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","sourcesContent":["\r\nimport React,{Component,useState,useRef} from 'react'\r\nimport {Form , Button ,Container} from \"react-bootstrap\"\r\nimport {useNavigate,Link} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nfunction Questionaries() {\r\n\r\n  const [Questions,setQuestions] = useState({\r\n   \r\n    Q1:\"\",\r\n    Q2:\"\",\r\n    Q3:\"\"\r\n  })\r\n\r\n  const handleAnswers = event =>{\r\n    const target = event.target\r\n    const name = target.name\r\n    const value = target.value\r\n    setQuestions({...Questions,[name]:value})\r\n  }\r\n\r\n\r\n  function formHandle(e) {  \r\n    e.preventDefault();\r\n    for (const [key,value] of Object.entries(Questions)) {\r\n       while (value == null || value == \"\") {        \r\n         const buttons = document.querySelectorAll(\"input[type='radio']\");\r\n         buttons.forEach(button => {          \r\n            if(!button.checked) {\r\n              button.setAttribute(\"required\",\"\")  \r\n              }                    \r\n            })\r\n            return \r\n       }        \r\n    }  \r\n    console.log(Questions)\r\n   \r\n  }\r\n\r\n  const taskPage = useNavigate()\r\n\r\n  \r\n       \r\n  \r\n  \r\n  return (    \r\n   <>\r\n    <Container className=\"d-flex align-items-center justify-content-center \" style={{minHeight:\"100vh\"}}>\r\n    <div className=\"w-100\" style={{maxWidth:\"400px\"}}>\r\n       <Form onSubmit={submitData}>\r\n         <legend>Please fill out this Questionaries?</legend>\r\n        <div className=\"mb-3\">\r\n          <Form.Label htmlFor=\"engLevel\" className=\"mt-2\" >What is your English language level of understanding?</Form.Label>\r\n          <select className=\"form-select\" value={Questions.Quest1} name=\"Q1\" id=\"Q1\" onChange={(e)=>setQuestions({...Questions, Q1:e.target.value})}>                    \r\n            <option value=\"\" >Select any Options</option>\r\n            <option value=\"Bad\">Bad</option>\r\n            <option value=\"Satisfactory\">Satisfactory</option>\r\n            <option value=\"Good\">Good</option>\r\n            <option value=\"Excellent\">Excellent</option>\r\n          </select>         \r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <Form.Label htmlFor=\"engLevel\" className=\"mt-2\" >What is your German language level of understanding?</Form.Label>\r\n          <select className=\"form-select\" value={Questions.Q2}name=\"Quest2\" id=\"Q2\" onChange={(e)=>setQuestions({...Questions,Q2: e.target.value})}>                    \r\n            <option value=\"\">Select any Options</option>\r\n            <option value=\"Bad\">Bad</option>\r\n            <option value=\"Satisfactory\">Satisfactory</option>\r\n            <option value=\"Good\">Good</option>\r\n            <option value=\"Excellent\">Excellent</option>\r\n          </select>         \r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <Form.Label htmlFor=\"engLevel\" className=\"mt-2\" >Do you like soft drinks or hard drinks?</Form.Label>\r\n          <select className=\"form-select\" value={Questions.Q3}name=\"Quest3\" id=\"Q3\" onChange={(e)=>setQuestions({...Questions,Q3: e.target.value})}>                    \r\n            <option value=\"\">Select any Options</option>\r\n            <option value=\"Bad\">Bad</option>\r\n            <option value=\"Satisfactory\">Satisfactory</option>\r\n            <option value=\"Good\">Good</option>\r\n            <option value=\"Excellent\">Excellent</option>\r\n          </select>         \r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <Form.Label htmlFor=\"engLevel\" className=\"mt-2\" >What is your favourite sports?</Form.Label>\r\n          <select className=\"form-select\" value={Questions.Q4}name=\"Quest4\" id=\"Q4\" onChange={(e)=>setQuestions({...Questions,Q4: e.target.value})}>                    \r\n            <option value=\"\">Select any Options</option>\r\n            <option value=\"Bad\">Bad</option>\r\n            <option value=\"Satisfactory\">Satisfactory</option>\r\n            <option value=\"Good\">Good</option>\r\n            <option value=\"Excellent\">Excellent</option>\r\n          </select>         \r\n        </div>\r\n        <Button type=\"submit\" className=\"mt-4\">Submit</Button>\r\n        <Button type=\"button\" className=\"mt-4 ms-4\" onClick={()=>{taskPage(\"/Description\")}}>Next</Button>       \r\n                      \r\n        \r\n       \r\n       </Form>\r\n       </div>\r\n      </Container>\r\n        \r\n   </>\r\n  )\r\n}\r\n\r\nexport default Questionaries\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
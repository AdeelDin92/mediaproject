{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\src\\\\components\\\\Canvas.js\";\nimport React from 'react';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport Regions from './Regions';\nimport BaseImage from './BaseImage';\nimport useStore from '../store';\nimport Practise from \"./practise\";\nvar id = 1;\n\nfunction getRelativePointerPosition(node) {\n  // the function will return pointer position relative to the passed node\n  var transform = node.getAbsoluteTransform().copy(); // to detect relative position we need to invert transform\n\n  transform.invert(); // get pointer (say mouse or touch) position\n\n  var pos = node.getStage().getPointerPosition(); // now we find relative point\n\n  return transform.point(pos);\n}\n\nfunction zoomStage(stage, scaleBy) {\n  var oldScale = stage.scaleX();\n  var pos = {\n    x: stage.width() / 2,\n    y: stage.height() / 2\n  };\n  var mousePointTo = {\n    x: pos.x / oldScale - stage.x() / oldScale,\n    y: pos.y / oldScale - stage.y() / oldScale\n  };\n  var newScale = Math.max(0.05, oldScale * scaleBy);\n  var newPos = {\n    x: -(mousePointTo.x - pos.x / newScale) * newScale,\n    y: -(mousePointTo.y - pos.y / newScale) * newScale\n  };\n  var newAttrs = limitAttributes(stage, _objectSpread(_objectSpread({}, newPos), {}, {\n    scale: newScale\n  }));\n  stage.to({\n    x: newAttrs.x,\n    y: newAttrs.y,\n    scaleX: newAttrs.scale,\n    scaleY: newAttrs.scale,\n    duration: 0.1\n  });\n}\n\nfunction limitAttributes(stage, newAttrs) {\n  var box = stage.findOne('Image').getClientRect();\n  var minX = -box.width + stage.width() / 2;\n  var maxX = stage.width() / 2;\n  var x = Math.max(minX, Math.min(newAttrs.x, maxX));\n  var minY = -box.height + stage.height() / 2;\n  var maxY = stage.height() / 2;\n  var y = Math.max(minY, Math.min(newAttrs.y, maxY));\n  var scale = Math.max(0.05, newAttrs.scale);\n  return {\n    x: x,\n    y: y,\n    scale: scale\n  };\n}\n\nfunction Canvas() {\n  var stageRef = React.useRef();\n\n  var _useStore = useStore(function (s) {\n    return {\n      width: s.width,\n      height: s.height\n    };\n  }),\n      width = _useStore.width,\n      height = _useStore.height;\n\n  var setSize = useStore(function (s) {\n    return s.setSize;\n  });\n  var scale = useStore(function (state) {\n    return state.scale;\n  });\n  var isDrawing = useStore(function (state) {\n    return state.isDrawing;\n  });\n  var toggleDrawing = useStore(function (state) {\n    return state.toggleIsDrawing;\n  });\n  var regions = useStore(function (state) {\n    return state.regions;\n  });\n  var setRegions = useStore(function (state) {\n    return state.setRegions;\n  });\n  var selectRegion = useStore(function (s) {\n    return s.selectRegion;\n  });\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageSrc = _useState2[0],\n      setImgSrc = _useState2[1];\n\n  var incrementImg = function incrementImg() {\n    setImgSrc(imageSrc + 1);\n  };\n\n  var decrementImg = function decrementImg() {\n    setImgSrc(imageSrc - 1);\n  };\n\n  React.useEffect(function () {\n    function checkSize() {\n      var container = document.querySelector('.Task-container');\n      setSize({\n        width: container.offsetWidth,\n        height: height\n      });\n    }\n\n    checkSize();\n    window.addEventListener('resize', checkSize);\n    return function () {\n      return window.removeEventListener('resize', checkSize);\n    };\n  }, [setSize, height]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stage, {\n    ref: stageRef,\n    width: width,\n    height: height,\n    scaleX: scale,\n    scaleY: scale,\n    className: \"canvas\",\n    onClick: function onClick(e) {\n      var clickedNotOnRegion = e.target.name() !== 'region';\n\n      if (clickedNotOnRegion) {\n        selectRegion(null);\n      }\n    },\n    onWheel: function onWheel(e) {\n      e.evt.preventDefault();\n      var stage = stageRef.current;\n      var dx = -e.evt.deltaX;\n      var dy = -e.evt.deltaY;\n      var pos = limitAttributes(stage, {\n        x: stage.x() + dx,\n        y: stage.y() + dy,\n        scale: stage.scaleX()\n      });\n      stageRef.current.position(pos);\n    },\n    onMouseDown: function onMouseDown(e) {\n      toggleDrawing(true);\n      var point = getRelativePointerPosition(e.target.getStage());\n      var region = {\n        id: id++,\n        color: Konva.Util.getRandomColor(),\n        points: [point]\n      };\n      setRegions(regions.concat([region]));\n    },\n    onMouseMove: function onMouseMove(e) {\n      if (!isDrawing) {\n        return;\n      }\n\n      var lastRegion = _objectSpread({}, regions[regions.length - 1]);\n\n      var point = getRelativePointerPosition(e.target.getStage());\n      lastRegion.points = lastRegion.points.concat([point]);\n      regions.splice(regions.length - 1, 1);\n      setRegions(regions.concat([lastRegion]));\n    },\n    onMouseUp: function onMouseUp(e) {\n      if (!isDrawing) {\n        return;\n      }\n\n      var lastRegion = regions[regions.length - 1];\n\n      if (lastRegion.points.length < 3) {\n        regions.splice(regions.length - 1, 1);\n        setRegions(regions.concat());\n      }\n\n      toggleDrawing();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseImage, {\n    imageSource: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Regions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zoom-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      zoomStage(stageRef.current, 1.2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      zoomStage(stageRef.current, 0.8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"test\",\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \">\")));\n}\n\n;\nexport default Canvas;","map":{"version":3,"sources":["C:/Users/Addy/OneDrive/Documents/React/Client/src/components/Canvas.js"],"names":["React","Konva","Stage","Regions","BaseImage","useStore","Practise","id","getRelativePointerPosition","node","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","zoomStage","stage","scaleBy","oldScale","scaleX","x","width","y","height","mousePointTo","newScale","Math","max","newPos","newAttrs","limitAttributes","scale","to","scaleY","duration","box","findOne","getClientRect","minX","maxX","min","minY","maxY","Canvas","stageRef","useRef","s","setSize","state","isDrawing","toggleDrawing","toggleIsDrawing","regions","setRegions","selectRegion","useState","imageSrc","setImgSrc","incrementImg","decrementImg","useEffect","checkSize","container","document","querySelector","offsetWidth","window","addEventListener","removeEventListener","e","clickedNotOnRegion","target","name","evt","preventDefault","current","dx","deltaX","dy","deltaY","position","region","color","Util","getRandomColor","points","concat","lastRegion","length","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\n\nimport Regions from './Regions';\nimport BaseImage from './BaseImage';\nimport useStore from '../store';\nimport Practise from \"./practise\";\n\nlet id = 1;\n\nfunction getRelativePointerPosition(node) {\n  // the function will return pointer position relative to the passed node\n  const transform = node.getAbsoluteTransform().copy();\n  // to detect relative position we need to invert transform\n  transform.invert();\n\n  // get pointer (say mouse or touch) position\n  const pos = node.getStage().getPointerPosition();\n\n  // now we find relative point\n  return transform.point(pos);\n}\n\nfunction zoomStage(stage, scaleBy) {\n  const oldScale = stage.scaleX();\n\n  const pos = {\n    x: stage.width() / 2,\n    y: stage.height() / 2,\n  };\n  const mousePointTo = {\n    x: pos.x / oldScale - stage.x() / oldScale,\n    y: pos.y / oldScale - stage.y() / oldScale,\n  };\n\n  const newScale = Math.max(0.05, oldScale * scaleBy);\n\n  const newPos = {\n    x: -(mousePointTo.x - pos.x / newScale) * newScale,\n    y: -(mousePointTo.y - pos.y / newScale) * newScale,\n  };\n\n  const newAttrs = limitAttributes(stage, { ...newPos, scale: newScale });\n\n  stage.to({\n    x: newAttrs.x,\n    y: newAttrs.y,\n    scaleX: newAttrs.scale,\n    scaleY: newAttrs.scale,\n    duration: 0.1,\n  });\n}\n\nfunction limitAttributes(stage, newAttrs) {\n  const box = stage.findOne('Image').getClientRect();\n  const minX = -box.width + stage.width() / 2;\n  const maxX = stage.width() / 2;\n\n  const x = Math.max(minX, Math.min(newAttrs.x, maxX));\n\n  const minY = -box.height + stage.height() / 2;\n  const maxY = stage.height() / 2;\n\n  const y = Math.max(minY, Math.min(newAttrs.y, maxY));\n\n  const scale = Math.max(0.05, newAttrs.scale);\n\n  return { x, y, scale };\n}\n\nfunction Canvas () {\n  const stageRef = React.useRef();\n  const { width, height } = useStore((s) => ({\n    width: s.width,\n    height: s.height,\n  }));\n  const setSize = useStore((s) => s.setSize);\n  const scale = useStore((state) => state.scale);\n  const isDrawing = useStore((state) => state.isDrawing);\n  const toggleDrawing = useStore((state) => state.toggleIsDrawing);\n\n  const regions = useStore((state) => state.regions);\n  const setRegions = useStore((state) => state.setRegions);\n\n  const selectRegion = useStore((s) => s.selectRegion);\n\n  const [imageSrc, setImgSrc] = useState(1);\n\n  const incrementImg = () => {\n    setImgSrc(imageSrc + 1);\n  }\n\n  const decrementImg = () => {\n    setImgSrc(imageSrc - 1);\n  }\n\n  React.useEffect(() => {\n    function checkSize() {\n      const container = document.querySelector('.Task-container');\n      setSize({\n        width: container.offsetWidth,\n        height,\n      });\n    }\n    checkSize();\n    window.addEventListener('resize', checkSize);\n    return () => window.removeEventListener('resize', checkSize);\n  }, [setSize,height]);\n  return (\n    <React.Fragment>\n      <Stage\n        ref={stageRef}\n        width={width}\n        height={height}\n        scaleX={scale}\n        scaleY={scale}\n        className=\"canvas\"\n        onClick={(e) => {\n          const clickedNotOnRegion = e.target.name() !== 'region';\n          if (clickedNotOnRegion) {\n            selectRegion(null);\n          }\n        }}\n        onWheel={(e) => {\n          e.evt.preventDefault();\n          const stage = stageRef.current;\n\n          const dx = -e.evt.deltaX;\n          const dy = -e.evt.deltaY;\n          const pos = limitAttributes(stage, {\n            x: stage.x() + dx,\n            y: stage.y() + dy,\n            scale: stage.scaleX(),\n          });\n          stageRef.current.position(pos);\n        }}\n        onMouseDown={(e) => {\n          toggleDrawing(true);\n          const point = getRelativePointerPosition(e.target.getStage());\n          const region = {\n            id: id++,\n            color: Konva.Util.getRandomColor(),\n            points: [point],\n          };\n          setRegions(regions.concat([region]));\n        }}\n        onMouseMove={(e) => {\n          if (!isDrawing) {\n            return;\n          }\n          const lastRegion = { ...regions[regions.length - 1] };\n          const point = getRelativePointerPosition(e.target.getStage());\n          lastRegion.points = lastRegion.points.concat([point]);\n          regions.splice(regions.length - 1, 1);\n          setRegions(regions.concat([lastRegion]));\n        }}\n        onMouseUp={(e) => {\n          if (!isDrawing) {\n            return;\n          }\n          const lastRegion = regions[regions.length - 1];\n          if (lastRegion.points.length < 3) {\n            regions.splice(regions.length - 1, 1);\n            setRegions(regions.concat());\n          }\n          toggleDrawing();\n        }}\n      >\n        <BaseImage imageSource={1} />\n        <Regions />\n        \n        \n      </Stage>\n      <div className=\"zoom-container\">\n        <button\n          onClick={() => {\n            zoomStage(stageRef.current, 1.2);\n          }}\n        >\n          +\n        </button>\n        <button\n          onClick={() => {\n            zoomStage(stageRef.current, 0.8);\n          }}\n        >\n          -\n        </button>\n        <button onClick={incrementImg}>&#60;</button>\n        <button className=\"test\" onClick>&#62;</button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}
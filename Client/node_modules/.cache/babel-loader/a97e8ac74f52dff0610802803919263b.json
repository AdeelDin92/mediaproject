{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\src\\\\components\\\\practise.js\";\nimport { Html } from 'react-konva-utils';\nimport React, { Component, useEffect, useState, useRef } from 'react';\nimport { createRoot } from 'react-dom';\nimport { Stage, Layer, Image } from 'react-konva';\nimport useImage from 'use-image';\n\nfunction URLImage(props) {\n  var imageRef = useRef(null);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    loadImage();\n    return function () {\n      if (imageRef.current) {\n        imageRef.current.removeEventListener('load', handleLoad);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    loadImage();\n  }, [props.src]);\n\n  function handleLoad() {\n    setImage(imageRef.current);\n  }\n\n  function loadImage() {\n    var img = new window.Image();\n    img.src = props.src;\n    img.crossOrigin = \"Anonymous\";\n    imageRef.current = img;\n    imageRef.current.addEventListener('load', handleLoad);\n  }\n\n  return /*#__PURE__*/React.createElement(\"image\", {\n    x: \"{props.x}\",\n    y: \"{props.y}\",\n    image: \"{image}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default Practise;","map":{"version":3,"sources":["C:/Users/Addy/OneDrive/Documents/React/Client/src/components/practise.js"],"names":["Html","React","Component","useEffect","useState","useRef","createRoot","Stage","Layer","Image","useImage","URLImage","props","imageRef","image","setImage","loadImage","current","removeEventListener","handleLoad","src","img","window","crossOrigin","addEventListener","Practise"],"mappings":";;AACA,SAASA,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,EAAoCC,QAApC,EAA6CC,MAA7C,QAA2D,OAA3D;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,KAAvB,QAAoC,aAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;;AACA,kBAA0BD,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS;AACT,WAAO,YAAM;AACX,UAAGH,QAAQ,CAACI,OAAZ,EAAqB;AACnBJ,QAAAA,QAAQ,CAACI,OAAT,CAAiBC,mBAAjB,CAAqC,MAArC,EAA6CC,UAA7C;AACD;AACF,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACJ,KAAK,CAACQ,GAAP,CAFM,CAAT;;AAIA,WAASD,UAAT,GAAsB;AACpBJ,IAAAA,QAAQ,CAACF,QAAQ,CAACI,OAAV,CAAR;AACD;;AAED,WAASD,SAAT,GAAqB;AACnB,QAAMK,GAAG,GAAG,IAAIC,MAAM,CAACb,KAAX,EAAZ;AACAY,IAAAA,GAAG,CAACD,GAAJ,GAAUR,KAAK,CAACQ,GAAhB;AACAC,IAAAA,GAAG,CAACE,WAAJ,GAAgB,WAAhB;AACAV,IAAAA,QAAQ,CAACI,OAAT,GAAmBI,GAAnB;AACAR,IAAAA,QAAQ,CAACI,OAAT,CAAiBO,gBAAjB,CAAkC,MAAlC,EAA0CL,UAA1C;AACD;;AAED,sBACE;AAAO,IAAA,CAAC,EAAC,WAAT;AAAqB,IAAA,CAAC,EAAC,WAAvB;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AACH,eAAeM,QAAf","sourcesContent":["\r\nimport { Html } from 'react-konva-utils';\r\nimport React, { Component,useEffect,useState,useRef } from 'react';\r\nimport { createRoot } from 'react-dom';\r\nimport { Stage, Layer, Image } from 'react-konva';\r\nimport useImage from 'use-image'\r\n\r\n\r\nfunction URLImage(props) {\r\n\r\n    const imageRef = useRef(null);\r\n    const [image, setImage] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      loadImage();\r\n      return () => {\r\n        if(imageRef.current) {\r\n          imageRef.current.removeEventListener('load', handleLoad);\r\n        }\r\n      }\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      loadImage();\r\n    }, [props.src])\r\n  \r\n    function handleLoad() {\r\n      setImage(imageRef.current);\r\n    }\r\n  \r\n    function loadImage() {\r\n      const img = new window.Image();\r\n      img.src = props.src;\r\n      img.crossOrigin=\"Anonymous\";\r\n      imageRef.current = img;\r\n      imageRef.current.addEventListener('load', handleLoad);\r\n    }\r\n  \r\n    return (\r\n      <image x=\"{props.x}\" y=\"{props.y}\" image=\"{image}\"/>\r\n    );\r\n  }\r\nexport default Practise;"]},"metadata":{},"sourceType":"module"}
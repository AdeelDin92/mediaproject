{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\src\\\\components\\\\Questionaries.js\";\nimport React, { Component, useState, useRef, useEffect } from 'react';\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nfunction Questionaries() {\n  var _useState = useState({\n    Q1: \"\",\n    Q2: \"\",\n    Q3: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      Questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var handleAnswers = function handleAnswers(event) {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    setQuestions(_objectSpread(_objectSpread({}, Questions), {}, _defineProperty({}, name, value)));\n  };\n\n  function submitForm(e) {\n    if (Object.entries(Questions).length > 0) {\n      e.preventDefault();\n      console.log(Questions);\n      navigate(\"/Description\");\n    }\n  }\n\n  function check() {\n    var buttons = document.querySelectorAll(\"input[type='radio']\");\n    buttons.forEach(function (button) {\n      if (!button.checked) {\n        button.setAttribute(\"required\", \"\");\n      }\n    });\n  }\n\n  var navigate = useNavigate();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex align-items-center justify-content-center \",\n    style: {\n      minHeight: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    style: {\n      maxWidth: \"1000px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }\n  }, \"Please fill out this Questionaries?\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"mt-4\",\n    id: \"submitBtn\",\n    onClick: check,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 8\n    }\n  }, \"Submit\"))))));\n}\n\nexport default Questionaries;\n/*\r\nfor (const [key,value] of Object.entries(Questions)) {\r\n  while (value === null || value === \"\") {        \r\n    const buttons = document.querySelectorAll(\"input[type='radio']\");\r\n    buttons.forEach(button => {          \r\n       if(!button.checked) {\r\n         button.setAttribute(\"required\",\"\")  \r\n         }                    \r\n       })\r\n       return \r\n  }\r\n         \r\n}             \r\n*/\n\n/*const postForm = async (e)=> {   \r\n  e.preventDefault();\r\n  const {Q1,Q2,Q3} = Questions;\r\n  const res = await fetch(\"/Questionaries\",{\r\n    method:\"POST\",\r\n    headers:{\r\n      \"Content-type\" : \"application/json\"\r\n    },\r\n    body:JSON.stringify({\r\n      Q1:\"\",\r\n      Q2:\"\",\r\n      Q3:\"\"\r\n    })\r\n  });\r\n  \r\n  const data = await res.json()\r\n\r\n  if (res.status === 404 || !data) {\r\n    window.alert(\"Questions Failed\")\r\n  } else {\r\n    console.log(\"Questions Successfull\")\r\n    navigate(\"/Description\")\r\n  }\r\n}    \r\n*/","map":{"version":3,"sources":["C:/Users/Addy/OneDrive/Documents/React/Client/src/components/Questionaries.js"],"names":["React","Component","useState","useRef","useEffect","Form","Button","Container","useNavigate","Link","axios","Questionaries","Q1","Q2","Q3","Questions","setQuestions","handleAnswers","event","target","name","value","submitForm","e","Object","entries","length","preventDefault","console","log","navigate","check","buttons","document","querySelectorAll","forEach","button","checked","setAttribute","minHeight","maxWidth","display","flexDirection"],"mappings":"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","sourcesContent":["\r\nimport React,{Component,useState,useRef,useEffect} from 'react'\r\nimport {Form , Button ,Container} from \"react-bootstrap\"\r\nimport {useNavigate,Link,} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\n\r\nfunction Questionaries() {\r\n  \r\n\r\n  \r\n\r\n  const [Questions,setQuestions] = useState({   \r\n    Q1:\"\",\r\n    Q2:\"\",\r\n    Q3:\"\"\r\n  })\r\n\r\n  \r\n\r\n  const handleAnswers = event =>{\r\n    const target = event.target    \r\n    const name = target.name\r\n    const value = target.value\r\n    setQuestions({...Questions,[name]:value})    \r\n    \r\n   \r\n  }\r\n\r\n  \r\n\r\n\r\n  function submitForm(e) {\r\n    if(Object.entries(Questions).length>0) {\r\n      e.preventDefault()\r\n      console.log(Questions)\r\n      navigate(\"/Description\")\r\n     \r\n        \r\n\r\n    }\r\n   \r\n    \r\n    \r\n   \r\n\r\n  \r\n  }\r\n\r\n  function check () {\r\n    const buttons = document.querySelectorAll(\"input[type='radio']\");\r\n    buttons.forEach(button => {          \r\n       if(!button.checked) {\r\n         button.setAttribute(\"required\",\"\")           \r\n         }                    \r\n       })   \r\n      \r\n  }\r\n  \r\n\r\n  \r\n\r\n  const navigate = useNavigate()\r\n       \r\n  \r\n  \r\n  return (    \r\n    <>\r\n    <Container className=\"d-flex align-items-center justify-content-center \" style={{minHeight:\"100vh\"}}>\r\n    <div className=\"w-100\" style={{maxWidth:\"1000px\"}}>\r\n     <div className=\"form-container\">\r\n     <form onSubmit={submitForm}  style={{display:\"flex\" ,flexDirection:\"column\"}}>\r\n       <legend className=\"mb-3\">Please fill out this Questionaries?</legend>\r\n      <div class></div>\r\n       <Button type=\"submit\" className=\"mt-4\" id=\"submitBtn\" onClick={check}>Submit</Button>\r\n      \r\n       \r\n     </form>\r\n     \r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </Container>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Questionaries\r\n\r\n/*\r\nfor (const [key,value] of Object.entries(Questions)) {\r\n  while (value === null || value === \"\") {        \r\n    const buttons = document.querySelectorAll(\"input[type='radio']\");\r\n    buttons.forEach(button => {          \r\n       if(!button.checked) {\r\n         button.setAttribute(\"required\",\"\")  \r\n         }                    \r\n       })\r\n       return \r\n  }\r\n         \r\n}             \r\n*/\r\n\r\n/*const postForm = async (e)=> {   \r\n  e.preventDefault();\r\n  const {Q1,Q2,Q3} = Questions;\r\n  const res = await fetch(\"/Questionaries\",{\r\n    method:\"POST\",\r\n    headers:{\r\n      \"Content-type\" : \"application/json\"\r\n    },\r\n    body:JSON.stringify({\r\n      Q1:\"\",\r\n      Q2:\"\",\r\n      Q3:\"\"\r\n    })\r\n  });\r\n  \r\n  const data = await res.json()\r\n\r\n  if (res.status === 404 || !data) {\r\n    window.alert(\"Questions Failed\")\r\n  } else {\r\n    console.log(\"Questions Successfull\")\r\n    navigate(\"/Description\")\r\n  }\r\n}    \r\n*/"]},"metadata":{},"sourceType":"module"}
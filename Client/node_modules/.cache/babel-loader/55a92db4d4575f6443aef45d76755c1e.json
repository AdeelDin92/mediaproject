{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Addy\\\\OneDrive\\\\Documents\\\\React\\\\Client\\\\src\\\\components\\\\Testing\\\\SlideOne.js\";\nimport React from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport SlideTwo from './SlideTwo';\nimport FinalSlide from './FinalSlide';\n\nfunction SlideOne() {\n  //state for steps\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setstep = _useState2[1]; //state for form data\n\n\n  var _useState3 = useState({\n    Q1: \"\",\n    Q2: \"\",\n    Q3: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1]; // function for going to next step by increasing step state by 1\n\n\n  var nextStep = function nextStep() {\n    setstep(step + 1);\n  }; // function for going to previous step by decreasing step state by 1\n\n\n  var prevStep = function prevStep() {\n    setstep(step - 1);\n  }; // handling form input data by taking onchange value and updating our previous form data state\n\n\n  var handleInputData = function handleInputData(input) {\n    return function (e) {\n      // input value from the form\n      var value = e.target.value; //updating for data state taking previous state and then adding new value to create new object\n\n      setFormData(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, input, value));\n      });\n    };\n  };\n  /* javascript switch case to show different form in each step*/\n\n\n  switch (step) {\n    // case 1 to show stepOne form and passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n    case 1:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SlideOne, {\n        nextStep: nextStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      })))));\n    // case 2 to show stepTwo form passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n\n    case 2:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SlTwo, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleFormData: handleInputData,\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      })))));\n    // Only formData is passed as prop to show the final value at form submit\n\n    case 3:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 6,\n          offset: 3\n        },\n        className: \"custom-margin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FinalSlide, {\n        values: formData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      })))));\n    // default case to show nothing\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      });\n  }\n}\n\nexport default SlideOne;","map":{"version":3,"sources":["C:/Users/Addy/OneDrive/Documents/React/Client/src/components/Testing/SlideOne.js"],"names":["React","Container","Row","Col","useState","SlideTwo","FinalSlide","SlideOne","step","setstep","Q1","Q2","Q3","formData","setFormData","nextStep","prevStep","handleInputData","input","e","value","target","prevState","span","offset"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport SlideTwo from './SlideTwo';\r\nimport FinalSlide from './FinalSlide';\r\n\r\nfunction SlideOne() {\r\n    //state for steps\r\n  const [step, setstep] = useState(1);\r\n\r\n  //state for form data\r\n  const [formData, setFormData] = useState({\r\n    Q1: \"\",\r\n    Q2: \"\",\r\n    Q3: \"\"\r\n  })\r\n\r\n  // function for going to next step by increasing step state by 1\r\n  const nextStep = () => {\r\n    setstep(step + 1);\r\n  };\r\n\r\n  // function for going to previous step by decreasing step state by 1\r\n  const prevStep = () => {\r\n    setstep(step - 1);\r\n  };\r\n\r\n  // handling form input data by taking onchange value and updating our previous form data state\r\n  const handleInputData = input => e => {\r\n    // input value from the form\r\n    const {value } = e.target;\r\n\r\n    //updating for data state taking previous state and then adding new value to create new object\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [input]: value\r\n  }));\r\n\r\n  }\r\n  /* javascript switch case to show different form in each step*/\r\n  switch (step) {\r\n    // case 1 to show stepOne form and passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\r\n    case 1:\r\n      return (\r\n        <div className=\"\">\r\n          <Container>\r\n            <Row>\r\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                <SlideOne nextStep={nextStep} handleFormData={handleInputData} values={formData} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    // case 2 to show stepTwo form passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\r\n    case 2:\r\n      return (\r\n        <div className=\"\">\r\n          <Container>\r\n            <Row>\r\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                <SlTwo nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n      // Only formData is passed as prop to show the final value at form submit\r\n    case 3:\r\n      return (\r\n        <div className=\"\">\r\n          <Container>\r\n            <Row>\r\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\r\n                <FinalSlide values={formData}  />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    // default case to show nothing\r\n    default:\r\n      return (\r\n        <div className=\"\">\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default SlideOne"]},"metadata":{},"sourceType":"module"}